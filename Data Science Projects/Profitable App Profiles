{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Profitable App Profiles for the App Store and Google Play Markets\n",
    "\n",
    "our aim is to help our developers understand what type of apps are likely \n",
    "to attract more users on Google Play and the App Store. To do this, \n",
    "we'll need to collect and analyze data about mobile apps available on \n",
    "Google Play and the App Store.\n",
    "\n",
    "\n",
    "As of September 2018 there were approximately 2 million iOS apps and 2.1 million Andriod apps available for download.\n",
    "\n",
    "![Image](https://s3.amazonaws.com/dq-content/350/py1m8_statista.png)\n",
    "\n",
    "***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Firstly, we'll start with opeinging the data below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "from csv import reader\n",
    "\n",
    "### The Google Play data set ###\n",
    "opened_file = open('googleplaystore.csv')\n",
    "read_file = reader(opened_file)\n",
    "android = list(read_file)\n",
    "android_header = android[0]\n",
    "android = android[1:]\n",
    "\n",
    "### The App Store Data Set ###\n",
    "opened_file = open('AppleStore.csv')\n",
    "read_file = reader(opened_file)\n",
    "apple = list(read_file)\n",
    "apple_header = apple[0]\n",
    "apple = apple[1:]\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To make them easier to explore, we created a function named `explore_data()` that you can repeatedly use to print rows in a readable way."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def explore_data(dataset, start, end, rows_and_columns=False):\n",
    "    dataset_slice = dataset[start:end]    \n",
    "    for row in dataset_slice:\n",
    "        print(row)\n",
    "        print('\\n') # adds a new (empty) line after each row\n",
    "\n",
    "    if rows_and_columns:\n",
    "        print('Number of rows:', len(dataset))\n",
    "        print('Number of columns:', len(dataset[0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Andriod Data\n",
    "When using the `explore_data()` function we can see all of the data within the sheet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['App', 'Category', 'Rating', 'Reviews', 'Size', 'Installs', 'Type', 'Price', 'Content Rating', 'Genres', 'Last Updated', 'Current Ver', 'Android Ver']\n",
      "\n",
      "['Photo Editor & Candy Camera & Grid & ScrapBook', 'ART_AND_DESIGN', '4.1', '159', '19M', '10,000+', 'Free', '0', 'Everyone', 'Art & Design', 'January 7, 2018', '1.0.0', '4.0.3 and up']\n",
      "\n",
      "\n",
      "['Coloring book moana', 'ART_AND_DESIGN', '3.9', '967', '14M', '500,000+', 'Free', '0', 'Everyone', 'Art & Design;Pretend Play', 'January 15, 2018', '2.0.0', '4.0.3 and up']\n",
      "\n",
      "\n",
      "['U Launcher Lite – FREE Live Cool Themes, Hide Apps', 'ART_AND_DESIGN', '4.7', '87510', '8.7M', '5,000,000+', 'Free', '0', 'Everyone', 'Art & Design', 'August 1, 2018', '1.2.4', '4.0.3 and up']\n",
      "\n",
      "\n",
      "Number of rows: 10841\n",
      "Number of columns: 13\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "print(android_header)\n",
    "print()\n",
    "print(explore_data(android, 0, 3, True))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see from this data that there is 10,841 different rows of apps with 13 different columns containing information about each of the apps.\n",
    "***\n",
    "\n",
    "### Apple Data\n",
    "Let's now take a look at the data for the apple store"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['id', 'track_name', 'size_bytes', 'currency', 'price', 'rating_count_tot', 'rating_count_ver', 'user_rating', 'user_rating_ver', 'ver', 'cont_rating', 'prime_genre', 'sup_devices.num', 'ipadSc_urls.num', 'lang.num', 'vpp_lic']\n",
      "\n",
      "['284882215', 'Facebook', '389879808', 'USD', '0.0', '2974676', '212', '3.5', '3.5', '95.0', '4+', 'Social Networking', '37', '1', '29', '1']\n",
      "\n",
      "\n",
      "['389801252', 'Instagram', '113954816', 'USD', '0.0', '2161558', '1289', '4.5', '4.0', '10.23', '12+', 'Photo & Video', '37', '0', '29', '1']\n",
      "\n",
      "\n",
      "['529479190', 'Clash of Clans', '116476928', 'USD', '0.0', '2130805', '579', '4.5', '4.5', '9.24.12', '9+', 'Games', '38', '5', '18', '1']\n",
      "\n",
      "\n",
      "Number of rows: 7197\n",
      "Number of columns: 16\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "print(apple_header)\n",
    "print()\n",
    "print(explore_data(apple, 0, 3, True))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that the apple store has 7197 rows and 16 columns. The Apple store has almost 3,000 less apps than the google play store but is able to provide us with 3 more columns of information per app"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***\n",
    "## Data Cleaning\n",
    "### Checking for incorrect data\n",
    "The purpose of data cleaning is to remove the incorrect data from this sheet so that we don't have any incorrect or missleading data. Below shows checking the invalid entry and the removal of said entry"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Life Made WI-Fi Touchscreen Photo Frame', '1.9', '19', '3.0M', '1,000+', 'Free', '0', 'Everyone', '', 'February 11, 2018', '1.0.19', '4.0 and up']\n",
      "12\n",
      "\n",
      "['Photo Editor & Candy Camera & Grid & ScrapBook', 'ART_AND_DESIGN', '4.1', '159', '19M', '10,000+', 'Free', '0', 'Everyone', 'Art & Design', 'January 7, 2018', '1.0.0', '4.0.3 and up']\n",
      "13\n"
     ]
    }
   ],
   "source": [
    "print(android[10472])\n",
    "# The above entry is missing a row, another way that we can check is checking the length\n",
    "print(len(android[10472]))\n",
    "print()\n",
    "#This is the header row, it shows how many rows we NEED to have\n",
    "print(android[0])\n",
    "print(len(android[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10841\n",
      "10840\n"
     ]
    }
   ],
   "source": [
    "#DO NOT RUN THIS CODE MORE THAN ONCE\n",
    "print(len(android))\n",
    "del android[10472]\n",
    "print(len(android))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Finding duplicate data\n",
    "\n",
    "After reading through the discussions section of the database which can be found [here](https://www.kaggle.com/datasets/lava18/google-play-store-apps/discussion), we can see that there are some duplicate enteries, specifically for 'Instagram'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Instagram', 'SOCIAL', '4.5', '66577313', 'Varies with device', '1,000,000,000+', 'Free', '0', 'Teen', 'Social', 'July 31, 2018', 'Varies with device', 'Varies with device']\n",
      "['Instagram', 'SOCIAL', '4.5', '66577446', 'Varies with device', '1,000,000,000+', 'Free', '0', 'Teen', 'Social', 'July 31, 2018', 'Varies with device', 'Varies with device']\n",
      "['Instagram', 'SOCIAL', '4.5', '66577313', 'Varies with device', '1,000,000,000+', 'Free', '0', 'Teen', 'Social', 'July 31, 2018', 'Varies with device', 'Varies with device']\n",
      "['Instagram', 'SOCIAL', '4.5', '66509917', 'Varies with device', '1,000,000,000+', 'Free', '0', 'Teen', 'Social', 'July 31, 2018', 'Varies with device', 'Varies with device']\n"
     ]
    }
   ],
   "source": [
    "for app in android:\n",
    "    name = app[0] # Determining which row to use can be found from printing out the header\n",
    "    if name == 'Instagram':\n",
    "        print(app)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In total, there are 1,181 cases where an app occurs more than once. This is where data cleaning gets messy!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of duplicate apps: 1181 \n",
      "Examples of duplicate apps:  ['Quick PDF Scanner + OCR FREE', 'Box', 'Google My Business', 'ZOOM Cloud Meetings', 'join.me - Simple Meetings', 'Box', 'Zenefits', 'Google Ads', 'Google My Business', 'Slack']\n"
     ]
    }
   ],
   "source": [
    "duplicate_apps = []\n",
    "unique_apps = []\n",
    "for app in android:\n",
    "    name = app[0]\n",
    "    if name in unique_apps:\n",
    "        duplicate_apps.append(name)\n",
    "    else: \n",
    "        unique_apps.append(name)\n",
    "print('Number of duplicate apps:', len(duplicate_apps), '\\nExamples of duplicate apps: ', duplicate_apps[:10])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "we could just randomly delete the data that has duplicates until theres only one left, but how accurate is that? We don't know if we'd be getting data from yesterday or 3 years ago. Hence why we will leaving the entry with the highest number of reviews and deleting the ones that have a lower number of reviews."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Removing the Duplicates\n",
    "To remove the duplicates, we will do the following:\n",
    "\n",
    "Create a dictionary, where each dictionary key is a unique app name and the corresponding dictionary value is the highest number of reviews of that app.\n",
    "Use the information stored in the dictionary and create a new dataset, which will have only one entry per app (and for each app, we'll only select the entry with the highest number of reviews)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "reviews_max = {}\n",
    "for app in android:\n",
    "    name = app[0] # Get the name\n",
    "    n_reviews = float(app[3]) # Get the total # of ratings\n",
    "    if name in reviews_max and reviews_max[name] < n_reviews:\n",
    "        reviews_max.update({name : n_reviews})\n",
    "    elif name not in reviews_max:\n",
    "        reviews_max[name] = n_reviews\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The purpose of the code above is to do two things, first we are checking if the reviews_max dict contains the element we are currently on in the android list. If it is in there we are checking to see if the reviews are higher or lower than the current duplicate and replacing it if necessary. Second we are checking if it even exists at all within the list."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In a previous code cell, we found that there are 1,181 cases where an app occurs more than once, so the length of our dictionary (of unique apps) should be equal to the difference between the length of our data set and 1,181."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Expected length: 9659\n",
      "Actual length: 9659\n"
     ]
    }
   ],
   "source": [
    "print('Expected length:', len(android) - 1181)\n",
    "print('Actual length:', len(reviews_max))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we have to use our dictionary, `reviews_max` to begin weeding out the duplicate data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Photo Editor & Candy Camera & Grid & ScrapBook', 'ART_AND_DESIGN', '4.1', '159', '19M', '10,000+', 'Free', '0', 'Everyone', 'Art & Design', 'January 7, 2018', '1.0.0', '4.0.3 and up']\n",
      "\n",
      "\n",
      "['U Launcher Lite – FREE Live Cool Themes, Hide Apps', 'ART_AND_DESIGN', '4.7', '87510', '8.7M', '5,000,000+', 'Free', '0', 'Everyone', 'Art & Design', 'August 1, 2018', '1.2.4', '4.0.3 and up']\n",
      "\n",
      "\n",
      "['Sketch - Draw & Paint', 'ART_AND_DESIGN', '4.5', '215644', '25M', '50,000,000+', 'Free', '0', 'Teen', 'Art & Design', 'June 8, 2018', 'Varies with device', '4.2 and up']\n",
      "\n",
      "\n",
      "Number of rows: 9659\n",
      "Number of columns: 13\n"
     ]
    }
   ],
   "source": [
    "android_clean = []\n",
    "already_added = []\n",
    "for app in android:\n",
    "    name = app[0]\n",
    "    n_reviews = float(app[3])\n",
    "    if n_reviews == reviews_max[name] and name not in already_added:\n",
    "        android_clean.append(app)\n",
    "        already_added.append(name)\n",
    "explore_data(android_clean, 0, 3, True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the code block above we are creating two lists, `android_clean` and `already_added`. These lists are where we will be appending are results to as shown in the if statement. The if statement has a lot going on inside of it, lets break it down\n",
    "\n",
    "How things are passed through the if statement\n",
    "* `n_reviews` must equal the review information we have stored in `reviews_max`.\n",
    "* `name` must be found within the `already_added` list\n",
    "  * Inside the if statement, we are adding the whole app information to our new list and adding it to the `already_added` list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Removing Non-English Apps\n",
    "\n",
    "Remember we use English for the apps we develop at our company, and we'd like to analyze only the apps that are designed for an English-speaking audience. However, if we explore the data long enough, we'll find that both datasets have apps with names that suggest they are not designed for an English-speaking audience.\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "爱奇艺PPS -《欢乐颂2》电视剧热播\n",
      "【脱出ゲーム】絶対に最後までプレイしないで 〜謎解き＆ブロックパズル〜\n",
      "\n",
      "\n",
      "中国語 AQリスニング\n",
      "لعبة تقدر تربح DZ\n"
     ]
    }
   ],
   "source": [
    "print(apple[813][1])\n",
    "print(apple[6731][1])\n",
    "print('\\n')\n",
    "print(android_clean[4412][0])\n",
    "print(android_clean[7940][0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We don't want to keep apps that aren't in English. to do this we can use the `ord()` function, which converts different letters to a number, and in the english language theres 0-127 letters, numbers, and symbols that we will accept, anything else we will dispose of"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "97\n",
      "65\n",
      "29233\n",
      "53\n",
      "43\n"
     ]
    }
   ],
   "source": [
    "print(ord('a'))\n",
    "print(ord('A'))\n",
    "print(ord('爱'))\n",
    "print(ord('5'))\n",
    "print(ord('+'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In Python, strings are indexable and iterable, which means we can use indexing to select an individual character, and we can also iterate on the string using a for loop. this will come in handy when we start sifting through our data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a\n",
      "b\n",
      "c\n",
      "a\n",
      "b\n",
      "c\n"
     ]
    }
   ],
   "source": [
    "string = 'abc'\n",
    "print(string[0])\n",
    "print(string[1])\n",
    "print(string[2])\n",
    "\n",
    "for character in string:\n",
    "    print(character)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    ">def validate (string):\n",
    " >   for x in range(len(string)):\n",
    "  >      if ord(string[x]) > 128:\n",
    "   >         return False"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Above we have created a method called `validate()`, which takes in a string. When the string is taken in we can loop through each character of the string and check its ord value, if it's above 127 we know that the character is not an english character. We can remove a LARGE amount of data with this function and a for loop. Below is an example of how we can use this function on a smaller scale."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    ">print(validate('Instagram'))\n",
    ">print(validate(\"PPS -《欢乐颂2\"))\n",
    ">print(validate('Docs To Go™ Free Office Suite'))\n",
    ">print(validate('Instachat 😜'))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The function doesn't return true in the first case because we are only checking if it DOES NOT contain english characters, so the result, `none` is the appropriate result. Now we will rewrite the `validate()` function above to include english letters, that aren't in the typical letting format as shows with the ™ in the app name `'Docs To Go™ Free Office Suite'`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "def validate (string): \n",
    "    threeFalse = 0\n",
    "    for x in range(len(string)): \n",
    "        if ord(string[x]) > 127: \n",
    "            threeFalse += 1\n",
    "        if threeFalse > 3:\n",
    "            return False\n",
    "    if threeFalse <= 3:\n",
    "        return True"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "print(validate('Docs To Go™ Free Office Suite'))\n",
    "print(validate('Instachat 😜'))\n",
    "print(validate('爱奇艺PPS -《欢乐颂2》电视剧热播'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We've confirmed that our new `validate()` function works, and only returns `False` in the case where theres more than 3 occurances, otherwise it returns `True`. Now it's time to test it on the datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Photo Editor & Candy Camera & Grid & ScrapBook', 'ART_AND_DESIGN', '4.1', '159', '19M', '10,000+', 'Free', '0', 'Everyone', 'Art & Design', 'January 7, 2018', '1.0.0', '4.0.3 and up']\n",
      "\n",
      "\n",
      "['U Launcher Lite – FREE Live Cool Themes, Hide Apps', 'ART_AND_DESIGN', '4.7', '87510', '8.7M', '5,000,000+', 'Free', '0', 'Everyone', 'Art & Design', 'August 1, 2018', '1.2.4', '4.0.3 and up']\n",
      "\n",
      "\n",
      "['Sketch - Draw & Paint', 'ART_AND_DESIGN', '4.5', '215644', '25M', '50,000,000+', 'Free', '0', 'Teen', 'Art & Design', 'June 8, 2018', 'Varies with device', '4.2 and up']\n",
      "\n",
      "\n",
      "Number of rows: 9614\n",
      "Number of columns: 13\n",
      "['284882215', 'Facebook', '389879808', 'USD', '0.0', '2974676', '212', '3.5', '3.5', '95.0', '4+', 'Social Networking', '37', '1', '29', '1']\n",
      "\n",
      "\n",
      "['389801252', 'Instagram', '113954816', 'USD', '0.0', '2161558', '1289', '4.5', '4.0', '10.23', '12+', 'Photo & Video', '37', '0', '29', '1']\n",
      "\n",
      "\n",
      "['529479190', 'Clash of Clans', '116476928', 'USD', '0.0', '2130805', '579', '4.5', '4.5', '9.24.12', '9+', 'Games', '38', '5', '18', '1']\n",
      "\n",
      "\n",
      "Number of rows: 6183\n",
      "Number of columns: 16\n"
     ]
    }
   ],
   "source": [
    "English_Clean_Android = []\n",
    "English_Clean_Apple = []\n",
    "for app in android_clean:\n",
    "    name = app[0]\n",
    "    if validate(name) == True:\n",
    "        English_Clean_Android.append(app)\n",
    "for app in apple:\n",
    "    name = app[1]\n",
    "    if validate(name) == True:\n",
    "        English_Clean_Apple.append(app)\n",
    "explore_data(English_Clean_Android, 0, 3, True)\n",
    "explore_data(English_Clean_Apple, 0, 3, True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So far in the data cleaning process, we've done the following:\n",
    "\n",
    "* Removed inaccurate data\n",
    "* Removed duplicate app entries\n",
    "* Removed non-English apps\n",
    "\n",
    "Now we will seperate apps based on whether they are free or not\n",
    "### Isolate Free Apps\n",
    "\n",
    "#### Part One"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8864\n",
      "3222\n"
     ]
    }
   ],
   "source": [
    "free_apple = []\n",
    "free_android = []\n",
    "\n",
    "for app in English_Clean_Android:\n",
    "    price = app[7]\n",
    "    if price == '0':\n",
    "        free_android.append(app)\n",
    "        \n",
    "for app in English_Clean_Apple:\n",
    "    price = app[4]\n",
    "    if price == '0.0':\n",
    "        free_apple.append(app)\n",
    "\n",
    "print(len(free_android))\n",
    "print(len(free_apple))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Something important to keep in mind that I realized when my results didn't look correct the first time is that the two tables are not formatted the same. The ones that we are looking for are in two different columns for the two different tables. Besides that we now have cleaned our data enough to perform a proper analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "As we mentioned in the introduction, our goal is to determine the kinds of apps that are likely to attract more users because the number of people using our apps affect our revenue.\n",
    "\n",
    "To minimize risks and overhead, our validation strategy for an app idea has three steps:\n",
    "\n",
    "* Build a minimal Android version of the app, and add it to Google Play.\n",
    "* If the app has a good response from users, we develop it further.\n",
    "* If the app is profitable after six months, we build an iOS version of the app and add it to the App Store.\n",
    "\n",
    "Because our end goal is to add the app on both Google Play and the App Store, we need to find app profiles that are successful in both markets. For instance, a profile that works well for both markets might be a productivity app that makes use of gamification."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['id', 'track_name', 'size_bytes', 'currency', 'price', 'rating_count_tot', 'rating_count_ver', 'user_rating', 'user_rating_ver', 'ver', 'cont_rating', 'prime_genre', 'sup_devices.num', 'ipadSc_urls.num', 'lang.num', 'vpp_lic']\n",
      "\n",
      "['App', 'Category', 'Rating', 'Reviews', 'Size', 'Installs', 'Type', 'Price', 'Content Rating', 'Genres', 'Last Updated', 'Current Ver', 'Android Ver']\n"
     ]
    }
   ],
   "source": [
    "print(apple_header)\n",
    "print()\n",
    "print(android_header)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Part Two\n",
    "The columns that would be beneficial would be `android[Category]`, `android[Genres]`, `android[Reviews]`, and `android[Content Rating]` for google play. For ios I feel we would benefit from looking into the `apple[user_rating]`, `apple[prime_genre]`, and maybe `apple[rating_count_tot]`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "def display_table(dataset, index):\n",
    "    table = freq_table(dataset, index)\n",
    "    table_display = []\n",
    "    for key in table:\n",
    "        key_val_as_tuple = (table[key], key)\n",
    "        table_display.append(key_val_as_tuple)\n",
    "        \n",
    "    table_sorted = sorted(table_display, reverse = True)\n",
    "    for entry in table_sorted:\n",
    "        print(entry[1], ':', entry[0])\n",
    "\n",
    "        \n",
    "def freq_table (dataset, index):\n",
    "    table = {}\n",
    "    total = 0\n",
    "    \n",
    "    for row in dataset:\n",
    "        total += 1\n",
    "        value = row[index]\n",
    "        if value in table:\n",
    "            table[value] += 1\n",
    "        else:\n",
    "            table[value] = 1\n",
    "    \n",
    "    table_percentages = {}\n",
    "    for key in table:\n",
    "        percentage = (table[key] / total) * 100\n",
    "        table_percentages[key] = percentage \n",
    "    \n",
    "    return table_percentages"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Part Three\n",
    "On the previous screen, we generated frequency tables for the columns `prime_genre`, `Genres`, and `Category`. We'll now focus on analyzing these frequency tables.\n",
    "\n",
    "Remember our dataset only contains free English apps, so you should be careful not to extend your conclusions beyond that scope. If you find that gaming apps are the most numerous among the free English apps on Google Play, it doesn't mean we'll see the same pattern on Google Play as a whole."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`prime_genre` in the app store"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Games : 58.16263190564867\n",
      "Entertainment : 7.883302296710118\n",
      "Photo & Video : 4.9658597144630665\n",
      "Education : 3.662321539416512\n",
      "Social Networking : 3.2898820608317814\n",
      "Shopping : 2.60707635009311\n",
      "Utilities : 2.5139664804469275\n",
      "Sports : 2.1415270018621975\n",
      "Music : 2.0484171322160147\n",
      "Health & Fitness : 2.0173805090006205\n",
      "Productivity : 1.7380509000620732\n",
      "Lifestyle : 1.5828677839851024\n",
      "News : 1.3345747982619491\n",
      "Travel : 1.2414649286157666\n",
      "Finance : 1.1173184357541899\n",
      "Weather : 0.8690254500310366\n",
      "Food & Drink : 0.8069522036002483\n",
      "Reference : 0.5586592178770949\n",
      "Business : 0.5276225946617008\n",
      "Book : 0.4345127250155183\n",
      "Navigation : 0.186219739292365\n",
      "Medical : 0.186219739292365\n",
      "Catalogs : 0.12414649286157665\n"
     ]
    }
   ],
   "source": [
    "display_table(free_apple, -5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For free apps, the more common genre by a land slide is **Games**. Games make up more than half of the free english apps with `58.16%`. The next common genre for free english apps is **Entertainment**. the progession through quantity of apps based on title is subtle but understandable, until the top of the list with games shooting up 50% higher than Entertainment.\n",
    "\n",
    "Based on number of apps alone I don't think that this is enough to pictch a game idea to the company, if anything it seems that you may want to stay away unless you can provide a new and unique experience to make the app stand out, with out this the app will just get lost in the thousands of other apps, but lets keep looking.\n",
    "\n",
    "\n",
    "Now we'll look at the google play stores categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "FAMILY : 18.907942238267147\n",
      "GAME : 9.724729241877256\n",
      "TOOLS : 8.461191335740072\n",
      "BUSINESS : 4.591606498194946\n",
      "LIFESTYLE : 3.9034296028880866\n",
      "PRODUCTIVITY : 3.892148014440433\n",
      "FINANCE : 3.7003610108303246\n",
      "MEDICAL : 3.531137184115524\n",
      "SPORTS : 3.395758122743682\n",
      "PERSONALIZATION : 3.3167870036101084\n",
      "COMMUNICATION : 3.2378158844765346\n",
      "HEALTH_AND_FITNESS : 3.0798736462093865\n",
      "PHOTOGRAPHY : 2.944494584837545\n",
      "NEWS_AND_MAGAZINES : 2.7978339350180503\n",
      "SOCIAL : 2.6624548736462095\n",
      "TRAVEL_AND_LOCAL : 2.33528880866426\n",
      "SHOPPING : 2.2450361010830324\n",
      "BOOKS_AND_REFERENCE : 2.1435018050541514\n",
      "DATING : 1.861462093862816\n",
      "VIDEO_PLAYERS : 1.7937725631768955\n",
      "MAPS_AND_NAVIGATION : 1.3989169675090252\n",
      "FOOD_AND_DRINK : 1.2409747292418771\n",
      "EDUCATION : 1.1620036101083033\n",
      "ENTERTAINMENT : 0.9589350180505415\n",
      "LIBRARIES_AND_DEMO : 0.9363718411552346\n",
      "AUTO_AND_VEHICLES : 0.9250902527075812\n",
      "HOUSE_AND_HOME : 0.8235559566787004\n",
      "WEATHER : 0.8009927797833934\n",
      "EVENTS : 0.7107400722021661\n",
      "PARENTING : 0.6543321299638989\n",
      "ART_AND_DESIGN : 0.6430505415162455\n",
      "COMICS : 0.6204873646209386\n",
      "BEAUTY : 0.5979241877256317\n"
     ]
    }
   ],
   "source": [
    "display_table(free_android, 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the google playstore, we see that its a whole different environment, with **Games** at 2nd place with `9.7%` and **Family** with `18.9%`. Since there is no family in the App store but there is in the Google Play store, I think it would be safe to assume that majority of **Family** apps are also considered **Games**, but are more family friendly.\n",
    "\n",
    "\n",
    "Now we'll look at the google play store Genres"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tools : 8.449909747292418\n",
      "Entertainment : 6.069494584837545\n",
      "Education : 5.347472924187725\n",
      "Business : 4.591606498194946\n",
      "Productivity : 3.892148014440433\n",
      "Lifestyle : 3.892148014440433\n",
      "Finance : 3.7003610108303246\n",
      "Medical : 3.531137184115524\n",
      "Sports : 3.463447653429603\n",
      "Personalization : 3.3167870036101084\n",
      "Communication : 3.2378158844765346\n",
      "Action : 3.1024368231046933\n",
      "Health & Fitness : 3.0798736462093865\n",
      "Photography : 2.944494584837545\n",
      "News & Magazines : 2.7978339350180503\n",
      "Social : 2.6624548736462095\n",
      "Travel & Local : 2.3240072202166067\n",
      "Shopping : 2.2450361010830324\n",
      "Books & Reference : 2.1435018050541514\n",
      "Simulation : 2.0419675090252705\n",
      "Dating : 1.861462093862816\n",
      "Arcade : 1.8501805054151623\n",
      "Video Players & Editors : 1.7712093862815883\n",
      "Casual : 1.7599277978339352\n",
      "Maps & Navigation : 1.3989169675090252\n",
      "Food & Drink : 1.2409747292418771\n",
      "Puzzle : 1.128158844765343\n",
      "Racing : 0.9927797833935018\n",
      "Role Playing : 0.9363718411552346\n",
      "Libraries & Demo : 0.9363718411552346\n",
      "Auto & Vehicles : 0.9250902527075812\n",
      "Strategy : 0.9138086642599278\n",
      "House & Home : 0.8235559566787004\n",
      "Weather : 0.8009927797833934\n",
      "Events : 0.7107400722021661\n",
      "Adventure : 0.6768953068592057\n",
      "Comics : 0.6092057761732852\n",
      "Beauty : 0.5979241877256317\n",
      "Art & Design : 0.5979241877256317\n",
      "Parenting : 0.4963898916967509\n",
      "Card : 0.45126353790613716\n",
      "Casino : 0.42870036101083037\n",
      "Trivia : 0.41741877256317694\n",
      "Educational;Education : 0.39485559566787\n",
      "Board : 0.3835740072202166\n",
      "Educational : 0.3722924187725632\n",
      "Education;Education : 0.33844765342960287\n",
      "Word : 0.2594765342960289\n",
      "Casual;Pretend Play : 0.236913357400722\n",
      "Music : 0.2030685920577617\n",
      "Racing;Action & Adventure : 0.16922382671480143\n",
      "Puzzle;Brain Games : 0.16922382671480143\n",
      "Entertainment;Music & Video : 0.16922382671480143\n",
      "Casual;Brain Games : 0.13537906137184114\n",
      "Casual;Action & Adventure : 0.13537906137184114\n",
      "Arcade;Action & Adventure : 0.12409747292418773\n",
      "Action;Action & Adventure : 0.10153429602888085\n",
      "Educational;Pretend Play : 0.09025270758122744\n",
      "Simulation;Action & Adventure : 0.078971119133574\n",
      "Parenting;Education : 0.078971119133574\n",
      "Entertainment;Brain Games : 0.078971119133574\n",
      "Board;Brain Games : 0.078971119133574\n",
      "Parenting;Music & Video : 0.06768953068592057\n",
      "Educational;Brain Games : 0.06768953068592057\n",
      "Casual;Creativity : 0.06768953068592057\n",
      "Art & Design;Creativity : 0.06768953068592057\n",
      "Education;Pretend Play : 0.056407942238267145\n",
      "Role Playing;Pretend Play : 0.04512635379061372\n",
      "Education;Creativity : 0.04512635379061372\n",
      "Role Playing;Action & Adventure : 0.033844765342960284\n",
      "Puzzle;Action & Adventure : 0.033844765342960284\n",
      "Entertainment;Creativity : 0.033844765342960284\n",
      "Entertainment;Action & Adventure : 0.033844765342960284\n",
      "Educational;Creativity : 0.033844765342960284\n",
      "Educational;Action & Adventure : 0.033844765342960284\n",
      "Education;Music & Video : 0.033844765342960284\n",
      "Education;Brain Games : 0.033844765342960284\n",
      "Education;Action & Adventure : 0.033844765342960284\n",
      "Adventure;Action & Adventure : 0.033844765342960284\n",
      "Video Players & Editors;Music & Video : 0.02256317689530686\n",
      "Sports;Action & Adventure : 0.02256317689530686\n",
      "Simulation;Pretend Play : 0.02256317689530686\n",
      "Puzzle;Creativity : 0.02256317689530686\n",
      "Music;Music & Video : 0.02256317689530686\n",
      "Entertainment;Pretend Play : 0.02256317689530686\n",
      "Casual;Education : 0.02256317689530686\n",
      "Board;Action & Adventure : 0.02256317689530686\n",
      "Video Players & Editors;Creativity : 0.01128158844765343\n",
      "Trivia;Education : 0.01128158844765343\n",
      "Travel & Local;Action & Adventure : 0.01128158844765343\n",
      "Tools;Education : 0.01128158844765343\n",
      "Strategy;Education : 0.01128158844765343\n",
      "Strategy;Creativity : 0.01128158844765343\n",
      "Strategy;Action & Adventure : 0.01128158844765343\n",
      "Simulation;Education : 0.01128158844765343\n",
      "Role Playing;Brain Games : 0.01128158844765343\n",
      "Racing;Pretend Play : 0.01128158844765343\n",
      "Puzzle;Education : 0.01128158844765343\n",
      "Parenting;Brain Games : 0.01128158844765343\n",
      "Music & Audio;Music & Video : 0.01128158844765343\n",
      "Lifestyle;Pretend Play : 0.01128158844765343\n",
      "Lifestyle;Education : 0.01128158844765343\n",
      "Health & Fitness;Education : 0.01128158844765343\n",
      "Health & Fitness;Action & Adventure : 0.01128158844765343\n",
      "Entertainment;Education : 0.01128158844765343\n",
      "Communication;Creativity : 0.01128158844765343\n",
      "Comics;Creativity : 0.01128158844765343\n",
      "Casual;Music & Video : 0.01128158844765343\n",
      "Card;Action & Adventure : 0.01128158844765343\n",
      "Books & Reference;Education : 0.01128158844765343\n",
      "Art & Design;Pretend Play : 0.01128158844765343\n",
      "Art & Design;Action & Adventure : 0.01128158844765343\n",
      "Arcade;Pretend Play : 0.01128158844765343\n",
      "Adventure;Education : 0.01128158844765343\n"
     ]
    }
   ],
   "source": [
    "display_table(free_android, 9)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the genres of apps, we can pretty easily tell that there is a lot more genres targeted around **Games**, however **Tools** holds the largest percentage with 8.45%. I don't think there is enough data to comfortably pitch an app profile, however I think we are beginning to narrow down our searches\n",
    "\n",
    "Now we begin sifting through our cleaned data. We are looking to find genres with the highest rating, to do this we first generate frequency tables for the App Store. Then we loop through all the different genres from the frequency table, and finally we loop through each app based on its genre"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The genre Social Networking, has 7584125.0 total ratings\n",
      "The genre Photo & Video, has 4550647.0 total ratings\n",
      "The genre Games, has 42705967.0 total ratings\n",
      "The genre Music, has 3783551.0 total ratings\n",
      "The genre Reference, has 1348958.0 total ratings\n",
      "The genre Health & Fitness, has 1514371.0 total ratings\n",
      "The genre Weather, has 1463837.0 total ratings\n",
      "The genre Utilities, has 1513441.0 total ratings\n",
      "The genre Travel, has 1129752.0 total ratings\n",
      "The genre Shopping, has 2261254.0 total ratings\n",
      "The genre News, has 913665.0 total ratings\n",
      "The genre Navigation, has 516542.0 total ratings\n",
      "The genre Lifestyle, has 840774.0 total ratings\n",
      "The genre Entertainment, has 3563577.0 total ratings\n",
      "The genre Food & Drink, has 866682.0 total ratings\n",
      "The genre Sports, has 1587614.0 total ratings\n",
      "The genre Book, has 556619.0 total ratings\n",
      "The genre Finance, has 1132846.0 total ratings\n",
      "The genre Education, has 826470.0 total ratings\n",
      "The genre Productivity, has 1177591.0 total ratings\n",
      "The genre Business, has 127349.0 total ratings\n",
      "The genre Catalogs, has 16016.0 total ratings\n",
      "The genre Medical, has 3672.0 total ratings\n"
     ]
    }
   ],
   "source": [
    "ios_genre = freq_table(free_apple, 11)\n",
    "\n",
    "for genre in ios_genre:\n",
    "    total = 0\n",
    "    len_genre = 0\n",
    "    for app in free_apple:\n",
    "        genre_app = app[11]\n",
    "        if genre_app == genre:\n",
    "            rating = float(app[5])\n",
    "            total += rating\n",
    "            len_genre += 1\n",
    "    avg_rating = total / len_genre\n",
    "    print(f\"The genre {genre}, has {total} total ratings\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Social networking has the most user reviews with almost 7.6 million reviews. Lets take a look and see which apps these numbers are coming from"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Netflix : 308844\n",
      "Fandango Movies - Times + Tickets : 291787\n",
      "Colorfy: Coloring Book for Adults : 247809\n",
      "IMDb Movies & TV - Trailers and Showtimes : 183425\n",
      "TRUTH or DARE!!! - FREE : 171055\n",
      "Mad Libs : 117889\n",
      "Twitch : 109549\n",
      "Action Movie FX : 101222\n",
      "Voice Changer Plus : 98777\n",
      "iFunny :) : 98344\n",
      "The CW : 97368\n",
      "The Moron Test : 88613\n",
      "DIRECTV : 81006\n",
      "ABC – Watch Live TV & Stream Full Episodes : 78890\n",
      "Xbox : 72187\n",
      "Redbox : 60236\n",
      "Talking Tom Cat 2 for iPad : 56399\n",
      "Hulu: Watch TV Shows & Stream the Latest Movies : 56170\n",
      "NBC – Watch Now and Stream Full TV Episodes : 55950\n",
      "Emoji> : 55338\n",
      "DIRECTV App for iPad : 47506\n",
      "Amazon Prime Video : 43667\n",
      "CBS Full Episodes and Live TV : 39436\n",
      "FOX NOW - Watch Full Episodes and Stream Live TV : 39391\n",
      "Talking Angela for iPad : 32763\n",
      "Recolor - Coloring Book : 31180\n",
      "Talking Ben the Dog for iPad : 31116\n",
      "Talking Tom Cat for iPad : 29492\n",
      "YouTube Kids : 28560\n",
      "Tom's Love Letters : 27711\n",
      "HBO GO : 26278\n",
      "NFL Sunday Ticket : 24258\n",
      "Pigment - Coloring Book for Adults : 23967\n",
      "Disney Channel – Watch Full Episodes, Movies & TV : 21082\n",
      "BuzzTube - Video Player for YouTube : 21012\n",
      "Talking Tom & Ben News for iPad : 20988\n",
      "Tubex - Videos and Music for YouTube : 20943\n",
      "Dubsmash : 20243\n",
      "Talking Ginger for iPad : 20065\n",
      "The Impossible Quiz! : 18884\n",
      "Freeform – watch live TV & stream full episodes : 18492\n",
      "Bruh-Button : 17487\n",
      "Wallpapers for Me - Themes & Background Images : 16925\n",
      "Roku : 16867\n",
      "Cartoon Network App – Teen Titans Go! And more! : 15984\n",
      "Disney Movies Anywhere: Watch Your Disney Movies! : 15900\n",
      "ColorArt: Coloring Book For Adults : 15797\n",
      "XFINITY Stream : 14198\n",
      "Regal Cinemas : 13257\n",
      "Nick : 13237\n",
      "ElfYourself by Office Depot, Inc. : 12177\n",
      "AgingBooth : 11999\n",
      "Hair Color Changer - Styles Salon & Recolor Booth : 11828\n",
      "Talking Pierre the Parrot for iPad : 11665\n",
      "PrankDial - #1 Prank Call App : 11091\n",
      "FXNOW - Full Episodes, Movies, and Stream Live TV : 9496\n",
      "Google Home : 9303\n",
      "StubHub - Tickets to Sports, Concerts and Theatre : 9011\n",
      "ZEDGE™ Ringtones : 9010\n",
      "STARZ : 8971\n",
      "Talking Ginger 2 : 8311\n",
      "Disney Junior – Watch Full Episodes, Movies & TV : 8077\n",
      "Coloring Book for Me - Coloring pages for adults : 7692\n",
      "WWE : 7553\n",
      "HBO NOW: Stream original series, hit movies & more : 7477\n",
      "PlayStation®App : 7256\n",
      "Watch TNT : 6856\n",
      "Pixel Color Ball Fell From The Sky : 6493\n",
      "Cheats For Pokemon Go - Gameplay, PokeCoins Guide, Catch Videos : 6205\n",
      "SeatGeek – Tickets to Sports, Concerts & Broadway : 6088\n",
      "Live Wallpapers by Themify: Dynamic Animated Theme : 6083\n",
      "Disney Junior Appisodes : 6009\n",
      "MTV : 5987\n",
      "Snake.io - Worm.io - Agar Slither Snake Battle : 5768\n",
      "Disney XD – Watch Full Episodes, Movies & Live TV : 5703\n",
      "Sling TV: A La Carte TV. Watch Live Shows & Sports : 5693\n",
      "Youku HD : 5683\n",
      "Everpix HD Wallpapers - Cool Backgrounds & Themes : 5521\n",
      "E! Now : 5506\n",
      "Force Saber of Light : 5424\n",
      "Ticketmaster - Tickets for Concerts, Sports, Shows : 5356\n",
      "Face Swap Booth – photo faceswap & face changer : 5300\n",
      "Skinseed - Skin Creator for Minecraft Skins : 5222\n",
      "Solitaire Free: card games for adults : 4891\n",
      "PNP 2016 Portable North Pole—Create Santa Videos : 4650\n",
      "Lock Screens - Free Wallpapers & Background Themes : 4429\n",
      "BB-8™ App Enabled Droid Powered by Sphero : 4385\n",
      "MiP App : 4350\n",
      "Total - Free browser with file manager and cloud storage support : 4231\n",
      "Atom – Movie Tickets and Showtimes : 4105\n",
      "Vudu - Movies & TV : 4052\n",
      "Watch TBS : 4050\n",
      "Watch OWN : 3895\n",
      "A Call From Santa! Voicemail & Text Messages : 3823\n",
      "JibJab : 3755\n",
      "go90 – Stream TV & Live Sports : 3355\n",
      "The Voice Official App on NBC : 3327\n",
      "Prize Wheel ™ : 3287\n",
      "Sunday Ticket : 3134\n",
      "Kylie Jenner Official App : 3111\n",
      "AMC : 3105\n",
      "MANSION MAPS for Minecraft PE - The Best Maps for Minecraft Pocket Edition (MCPE) : 2720\n",
      "The Walking Dead: Dead Yourself : 2369\n",
      "Tubi TV - Watch Free Movies & TV Shows : 2368\n",
      "Eventbrite - Local Events & Fun Things To Do Near Me : 2353\n",
      "VIZIO SmartCast™ - Cast & Control Movies & TV Show : 2288\n",
      "My Little Pony: Harmony Quest : 2265\n",
      "ZEDGE™ Wallpapers : 2215\n",
      "Akinator the Genie FREE : 2154\n",
      "VIDO - Rewards, Music and Videos for YouTube : 2133\n",
      "Camp Pokémon : 2125\n",
      "DIRECTV NOW : 2054\n",
      "ibis Paint X - speed painting : 1933\n",
      "Vehicles & Weapons Mods for Minecraft PC Edition - Best Pocket Wiki & Tools for MCPC : 1828\n",
      "Quidd : 1736\n",
      "Disney Applause : 1654\n",
      "Apple TV Remote : 1651\n",
      "Musical Video Creator Music+Videos illuminati Pro : 1588\n",
      "BuzzFeed Video : 1492\n",
      "Electric Screen Socket Prank : 1469\n",
      "Santa Call & Tracker Free - North Pole Command : 1458\n",
      "FreeFlight Pro. : 1352\n",
      "Miss Hollywood: Lights, Camera, Fashion! - Pet Fun : 1283\n",
      "Disney LOL : 1259\n",
      "SHOWTIME : 1214\n",
      "Speech Jammer : 1205\n",
      "Live Wallpapers for Me - Free Moving Backgrounds : 1200\n",
      "Google Play Movies & TV : 1195\n",
      "Ghost Observer - ghost detector & spirit radar : 1193\n",
      "Where is Santa Lite - Santa Tracker : 1085\n",
      "Barbie Dreamtopia - Magical Hair : 1079\n",
      "Mix+Smash: Marvel Super Hero Mashers : 1050\n",
      "WoW Legion Companion : 1019\n",
      "Anki OVERDRIVE : 981\n",
      "Musictrax - Unlimited Music : 979\n",
      "BET NOW - Watch Shows : 967\n",
      "Night Terrors: The Beginning : 954\n",
      "Mini Games Maps for Minecraft PE - The Best Maps for Minecraft Pocket Edition (MCPE) : 943\n",
      "V LIVE - Broadcasting App : 937\n",
      "Fullscreen : 894\n",
      "TEDiSUB - Enjoy TED Talks with Subtitles : 823\n",
      "Crayola Color Alive : 816\n",
      "INKHUNTER try tattoo designs in augmented reality : 809\n",
      "Strawberry Shortcake Dress Up Dreams : 796\n",
      "Strawberry Shortcake Holiday Hair - Fashion World : 795\n",
      "FandangoNOW - Movies + TV - anytime, anywhere : 787\n",
      "Truth Or Dare — Party Game : 730\n",
      "Naughty or Nice Scan Free : 729\n",
      "TLC GO - Watch Full Episodes and Live TV : 708\n",
      "PokeExplorer - Realtime Map for Pokemon GO : 672\n",
      "Disney Color and Play : 658\n",
      "Strawberry Shortcake Candy Garden : 633\n",
      "Santa's Naughty or Nice Scan-O-Matic Free : 632\n",
      "MagiMobile – Mighty Magiswords Collection App : 553\n",
      "Google Cardboard : 546\n",
      "MUTANT CREATURES MODS for Minecraft PC - Best Pocket Wiki Edition & Installation Tools : 452\n",
      "全民K歌 : 441\n",
      "Moji™ : 439\n",
      "Celebrity Look Alike App - Face Compare : 403\n",
      "Thomas & Friends: Magical Tracks - Kids Train Set : 389\n",
      "PHAROS Earth : 383\n",
      "AGT: America's Got Talent Official App on NBC : 367\n",
      "Cozmo ® : 364\n",
      "Why You Lying? : 355\n",
      "Hoodclips : 346\n",
      "Funny Face - Filters Pic Swap Effects Photo Editor : 343\n",
      "Within - VR (Virtual Reality) : 343\n",
      "Folioscope : 339\n",
      "Slaymoji - Emoji Keyboard & iMessage Stickers : 336\n",
      "Christmas Countdown 2017 : 334\n",
      "Ideas for Elves — The Elf on the Shelf® : 333\n",
      "Face Filters - Dog & Other Funny Face Effects : 329\n",
      "Univision NOW – Stream TV en Vivo y On Demand : 329\n",
      "Quiver - 3D Coloring App : 325\n",
      "ZDFmediathek : 320\n",
      "What Dog A Microsoft Garage Project : 280\n",
      "Bonk! Presented by The Tonight Show Starring Jimmy Fallon : 279\n",
      "Sisters: A Virtual Reality Ghost Story : 251\n",
      "Motor Trend OnDemand : 247\n",
      "PetMOJI – Character Creator & Emoji Keyboard : 244\n",
      "VeeR VR - Virtual Reality : 241\n",
      "HISTORY Vault : 239\n",
      "Video Call Santa Claus Christmas - Catch Kids Wish : 228\n",
      "Picolo drinking game : 227\n",
      "Ugly : 224\n",
      "Real Razor (Prank) : 220\n",
      "Nerve - Do You Dare? : 219\n",
      "Star Wars™ Force Band™ by Sphero : 215\n",
      "Disneynature Explore : 202\n",
      "Lip Sync Battle App : 195\n",
      "TwitCasting Viewer - Watch Live Video & Radio : 189\n",
      "SketchBook Motion : 187\n",
      "niconico : 182\n",
      "SHAHID for iPhone : 176\n",
      "CHiP - Your New Best Friend : 172\n",
      "Disney Princess: Charmed Adventures : 164\n",
      "MadLipz - Make a Voice Over Parody! : 153\n",
      "Black Box - Black Movie List : 136\n",
      "Santa Tracker Christmas Free : 134\n",
      "Webcams Viewer - Live Video Surveillance IP Cams : 130\n",
      "Reelgood - TV Guide for Streaming : 125\n",
      "Discovery VR : 125\n",
      "Insidious VR : 121\n",
      "myCANAL - la TV by CANAL en direct et replay : 118\n",
      "EmojiMom - An Emoji App for the Modern Mom : 110\n",
      "Truth or Dare · : 109\n",
      "Radio - USA : 109\n",
      "Sky Viper Video Viewer : 105\n",
      "AlloCiné : Cinéma et Séries : 101\n",
      "Miss U: Official App : 97\n",
      "Face Effects & Filters : 97\n",
      "Easter Bunny Tracker Fun : 83\n",
      "TV SPIELFILM - TV Programm mit Live TV : 81\n",
      "Fakey - Fake GPS Location Spoof : 78\n",
      "NORAD Tracks Santa Claus : 70\n",
      "Eurovision Song Contest - The Official App : 68\n",
      "Mebo : 64\n",
      "6play, TV en direct et en replay : 62\n",
      "Muslim Emoji : 62\n",
      "Attenborough Story of Life : 59\n",
      "Miss Peregrine’s Emoji : 54\n",
      "Music Player - Play Unlimited Songs from YouTube! : 53\n",
      "FreeFlight Mini : 50\n",
      "SFR TV : 46\n",
      "Santa Calls You Free : 44\n",
      "The Walk VR : 42\n",
      "Hillarymoji : 42\n",
      "Fake call from the Easter Bunny : 39\n",
      "Sky Viper Flight Simulator : 38\n",
      "25 Days of Christmas: Holiday Advent Calendar 2016 : 38\n",
      "TRUMP Yo'Self! Make Your Hair Great Again! : 37\n",
      "Thomas & Friends™: Read & Play : 30\n",
      "Nibmoji: Political Emojis : 30\n",
      "Santa Tracker - Where is Santa Claus? : 29\n",
      "Programme TV Télé Loisirs : 23\n",
      "VR Death Simulator : 22\n",
      "DailyCast - Aggregate Hot New Videos : 21\n",
      "SHOWROOM - video live streaming : 20\n",
      "Face Swap-r : 17\n",
      "Peatix -Discover events & communities in your city : 10\n",
      "Fabe Bird - The Flappy Challenge Adventure : 9\n",
      "Welcome to Virtual Reality : 6\n",
      "Auto Palmistry : 5\n",
      "Jeremstar box : 1\n",
      "Baidu Videos : 1\n",
      "Natoo : 0\n",
      "Theory of evolution : 0\n",
      "任务客 : 0\n",
      "RadiTube - great radio player for am/fm radios : 0\n",
      "Qu'est-ce que je sais vraiment ? : 0\n",
      "The Bad Man Tipster - Betting Tips : 0\n",
      "Les Anges : 0\n",
      "CelebrityCamera! : 0\n",
      "Suppin Detective: Expose their true visage! : 0\n"
     ]
    }
   ],
   "source": [
    "for app in free_apple:\n",
    "    if app[11] == 'Entertainment':\n",
    "        print(app[1], \":\", app[5])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that theres a lot of apps based around entertainment, but the top 3 apps make up a large percentage of the total number of ratings.\n",
    "\n",
    "Now we'll do it for the play store. But we have to remove some of the formating within this column so we can get the most accurate data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The genre ART_AND_DESIGN, has 1986335.0877192982 total downlaods\n",
      "The genre AUTO_AND_VEHICLES, has 647317.8170731707 total downlaods\n",
      "The genre BEAUTY, has 513151.88679245283 total downlaods\n",
      "The genre BOOKS_AND_REFERENCE, has 8767811.894736841 total downlaods\n",
      "The genre BUSINESS, has 1712290.1474201474 total downlaods\n",
      "The genre COMICS, has 817657.2727272727 total downlaods\n",
      "The genre COMMUNICATION, has 38456119.167247385 total downlaods\n",
      "The genre DATING, has 854028.8303030303 total downlaods\n",
      "The genre EDUCATION, has 1833495.145631068 total downlaods\n",
      "The genre ENTERTAINMENT, has 11640705.88235294 total downlaods\n",
      "The genre EVENTS, has 253542.22222222222 total downlaods\n",
      "The genre FINANCE, has 1387692.475609756 total downlaods\n",
      "The genre FOOD_AND_DRINK, has 1924897.7363636363 total downlaods\n",
      "The genre HEALTH_AND_FITNESS, has 4188821.9853479853 total downlaods\n",
      "The genre HOUSE_AND_HOME, has 1331540.5616438356 total downlaods\n",
      "The genre LIBRARIES_AND_DEMO, has 638503.734939759 total downlaods\n",
      "The genre LIFESTYLE, has 1437816.2687861272 total downlaods\n",
      "The genre GAME, has 15588015.603248259 total downlaods\n",
      "The genre FAMILY, has 3695641.8198090694 total downlaods\n",
      "The genre MEDICAL, has 120550.61980830671 total downlaods\n",
      "The genre SOCIAL, has 23253652.127118643 total downlaods\n",
      "The genre SHOPPING, has 7036877.311557789 total downlaods\n",
      "The genre PHOTOGRAPHY, has 17840110.40229885 total downlaods\n",
      "The genre SPORTS, has 3638640.1428571427 total downlaods\n",
      "The genre TRAVEL_AND_LOCAL, has 13984077.710144928 total downlaods\n",
      "The genre TOOLS, has 10801391.298666667 total downlaods\n",
      "The genre PERSONALIZATION, has 5201482.6122448975 total downlaods\n",
      "The genre PRODUCTIVITY, has 16787331.344927534 total downlaods\n",
      "The genre PARENTING, has 542603.6206896552 total downlaods\n",
      "The genre WEATHER, has 5074486.197183099 total downlaods\n",
      "The genre VIDEO_PLAYERS, has 24727872.452830188 total downlaods\n",
      "The genre NEWS_AND_MAGAZINES, has 9549178.467741935 total downlaods\n",
      "The genre MAPS_AND_NAVIGATION, has 4056941.7741935486 total downlaods\n"
     ]
    }
   ],
   "source": [
    "android_category = freq_table(free_android, 1)\n",
    "\n",
    "for category in android_category:\n",
    "    total = 0\n",
    "    len_category = 0\n",
    "    for app in free_android:\n",
    "        category_app = app[1]\n",
    "        if category_app == category:\n",
    "            downloads = app[5]\n",
    "            downloads = downloads.replace(',','')\n",
    "            downloads = downloads.replace('+','')\n",
    "            total += float(downloads)\n",
    "            len_category += 1\n",
    "    avg_installs = total / len_category\n",
    "    print(f\"The genre {category}, has {avg_installs} total downlaods\")\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that communication apps have the most total downloads with the average being 38 million downloads. But where do all these downloads come from?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WhatsApp Messenger  :  1,000,000,000+\n",
      "Messenger for SMS  :  10,000,000+\n",
      "My Tele2  :  5,000,000+\n",
      "imo beta free calls and text  :  100,000,000+\n",
      "Contacts  :  50,000,000+\n",
      "Call Free – Free Call  :  5,000,000+\n",
      "Web Browser & Explorer  :  5,000,000+\n",
      "Browser 4G  :  10,000,000+\n",
      "MegaFon Dashboard  :  10,000,000+\n",
      "ZenUI Dialer & Contacts  :  10,000,000+\n",
      "Cricket Visual Voicemail  :  10,000,000+\n",
      "TracFone My Account  :  1,000,000+\n",
      "Xperia Link™  :  10,000,000+\n",
      "TouchPal Keyboard - Fun Emoji & Android Keyboard  :  10,000,000+\n",
      "Skype Lite - Free Video Call & Chat  :  5,000,000+\n",
      "My magenta  :  1,000,000+\n",
      "Android Messages  :  100,000,000+\n",
      "Google Duo - High Quality Video Calls  :  500,000,000+\n",
      "Seznam.cz  :  1,000,000+\n",
      "Antillean Gold Telegram (original version)  :  100,000+\n",
      "AT&T Visual Voicemail  :  10,000,000+\n",
      "GMX Mail  :  10,000,000+\n",
      "Omlet Chat  :  10,000,000+\n",
      "My Vodacom SA  :  5,000,000+\n",
      "Microsoft Edge  :  5,000,000+\n",
      "Messenger – Text and Video Chat for Free  :  1,000,000,000+\n",
      "imo free video calls and chat  :  500,000,000+\n",
      "Calls & Text by Mo+  :  5,000,000+\n",
      "free video calls and chat  :  50,000,000+\n",
      "Skype - free IM & video calls  :  1,000,000,000+\n",
      "Who  :  100,000,000+\n",
      "GO SMS Pro - Messenger, Free Themes, Emoji  :  100,000,000+\n",
      "Messaging+ SMS, MMS Free  :  1,000,000+\n",
      "chomp SMS  :  10,000,000+\n",
      "Glide - Video Chat Messenger  :  10,000,000+\n",
      "Text SMS  :  10,000,000+\n",
      "Talkray - Free Calls & Texts  :  10,000,000+\n",
      "LINE: Free Calls & Messages  :  500,000,000+\n",
      "GroupMe  :  10,000,000+\n",
      "mysms SMS Text Messaging Sync  :  1,000,000+\n",
      "2ndLine - Second Phone Number  :  1,000,000+\n",
      "Google Chrome: Fast & Secure  :  1,000,000,000+\n",
      "Firefox Browser fast & private  :  100,000,000+\n",
      "Ninesky Browser  :  1,000,000+\n",
      "Dolphin Browser - Fast, Private & Adblock🐬  :  50,000,000+\n",
      "UC Browser - Fast Download Private & Secure  :  500,000,000+\n",
      "Ghostery Privacy Browser  :  1,000,000+\n",
      "InBrowser - Incognito Browsing  :  1,000,000+\n",
      "Lightning Web Browser  :  500,000+\n",
      "Web Browser  :  500,000+\n",
      "Contacts+  :  10,000,000+\n",
      "ExDialer - Dialer & Contacts  :  10,000,000+\n",
      "PHONE for Google Voice & GTalk  :  1,000,000+\n",
      "Safest Call Blocker  :  1,000,000+\n",
      "Full Screen Caller ID  :  5,000,000+\n",
      "Hiya - Caller ID & Block  :  10,000,000+\n",
      "Mr. Number-Block calls & spam  :  10,000,000+\n",
      "Should I Answer?  :  1,000,000+\n",
      "RocketDial Dialer & Contacts  :  1,000,000+\n",
      "CIA - Caller ID & Call Blocker  :  5,000,000+\n",
      "Calls Blacklist - Call Blocker  :  10,000,000+\n",
      "Call Control - Call Blocker  :  5,000,000+\n",
      "True Contact - Real Caller ID  :  1,000,000+\n",
      "Video Caller Id  :  1,000,000+\n",
      "Sync.ME – Caller ID & Block  :  5,000,000+\n",
      "Burner - Free Phone Number  :  1,000,000+\n",
      "Caller ID +  :  1,000,000+\n",
      "Gmail  :  1,000,000,000+\n",
      "K-9 Mail  :  5,000,000+\n",
      "myMail – Email for Hotmail, Gmail and Outlook Mail  :  10,000,000+\n",
      "Email TypeApp - Mail App  :  1,000,000+\n",
      "All Email Providers  :  1,000,000+\n",
      "Newton Mail - Email App for Gmail, Outlook, IMAP  :  1,000,000+\n",
      "GO Notifier  :  10,000,000+\n",
      "Mail.Ru - Email App  :  50,000,000+\n",
      "Mail1Click - Secure Mail  :  10,000+\n",
      "Daum Mail - Next Mail  :  5,000,000+\n",
      "mail.com mail  :  1,000,000+\n",
      "SolMail - All-in-One email app  :  500,000+\n",
      "Hangouts  :  1,000,000,000+\n",
      "Vonage Mobile® Call Video Text  :  1,000,000+\n",
      "JusTalk - Free Video Calls and Fun Video Chat  :  5,000,000+\n",
      "Azar  :  50,000,000+\n",
      "LokLok: Draw on a Lock Screen  :  500,000+\n",
      "Discord - Chat for Gamers  :  10,000,000+\n",
      "Messenger Lite: Free Calls & Messages  :  100,000,000+\n",
      "AntennaPict β  :  1,000,000+\n",
      "Talkatone: Free Texts, Calls & Phone Number  :  10,000,000+\n",
      "Kik  :  100,000,000+\n",
      "K-@ Mail - Email App  :  100,000+\n",
      "KakaoTalk: Free Calls & Text  :  100,000,000+\n",
      "K-9 Material (unofficial)  :  5,000+\n",
      "M star Dialer  :  100,000+\n",
      "Free WiFi Connect  :  10,000,000+\n",
      "m:go BiH  :  10,000+\n",
      "N-Com Wizard  :  50,000+\n",
      "Opera Mini - fast web browser  :  100,000,000+\n",
      "Opera Browser: Fast and Secure  :  100,000,000+\n",
      "Opera Mini browser beta  :  10,000,000+\n",
      "Psiphon Pro - The Internet Freedom VPN  :  10,000,000+\n",
      "ICQ — Video Calls & Chat Messenger  :  10,000,000+\n",
      "Telegram  :  100,000,000+\n",
      "AT&T Messages for Tablet  :  1,000,000+\n",
      "T-Mobile DIGITS  :  100,000+\n",
      "Truecaller: Caller ID, SMS spam blocking & Dialer  :  100,000,000+\n",
      "Portable Wi-Fi hotspot  :  10,000,000+\n",
      "AT&T Call Protect  :  5,000,000+\n",
      "U - Webinars, Meetings & Messenger  :  500,000+\n",
      "UC Browser Mini -Tiny Fast Private & Secure  :  100,000,000+\n",
      "/u/app  :  10,000+\n",
      "[verify-U] VideoIdent  :  10,000+\n",
      "Viber Messenger  :  500,000,000+\n",
      "WeChat  :  100,000,000+\n",
      "WhatsApp Business  :  10,000,000+\n",
      "WhatsCall Free Global Phone Call App & Cheap Calls  :  10,000,000+\n",
      "X Browser  :  50,000+\n",
      "Yahoo Mail – Stay Organized  :  100,000,000+\n",
      "Free Adblocker Browser - Adblock & Popup Blocker  :  10,000,000+\n",
      "Adblock Browser for Android  :  10,000,000+\n",
      "CM Browser - Ad Blocker , Fast Download , Privacy  :  50,000,000+\n",
      "Adblock Plus for Samsung Internet - Browse safe.  :  1,000,000+\n",
      "Ad Blocker Turbo - Adblocker Browser  :  10,000+\n",
      "Brave Browser: Fast AdBlocker  :  5,000,000+\n",
      "AG Contacts, Lite edition  :  5,000+\n",
      "Oklahoma Ag Co-op Council  :  10+\n",
      "Bee'ah Employee App  :  100+\n",
      "tournaments and more.aj.2  :  100+\n",
      "Aj.Petra  :  100+\n",
      "AK Phone  :  5,000+\n",
      "PlacarTv Futebol Ao Vivo  :  100,000+\n",
      "WiFi Access Point (hotspot)  :  100,000+\n",
      "Access Point Names  :  10,000+\n",
      "Puffin Web Browser  :  10,000,000+\n",
      "ClanHQ  :  10,000+\n",
      "Ear Agent: Super Hearing  :  5,000,000+\n",
      "Google Voice  :  10,000,000+\n",
      "Google Allo  :  10,000,000+\n",
      "AU Call Blocker - Block Unwanted Calls Texts 2018  :  1,000+\n",
      "Baby Monitor AV  :  100,000+\n",
      "AV Phone  :  1,000+\n",
      "AW - free video calls and chat  :  1,000,000+\n",
      "Katalogen.ax  :  100+\n",
      "AZ Browser. Private & Download  :  100,000+\n",
      "BA SALES  :  1+\n",
      "BD Data Plan (3G & 4G)  :  500,000+\n",
      "BD Internet Packages (Updated)  :  50,000+\n",
      "BD Dialer  :  10,000+\n",
      "BD Live Call  :  5,000+\n",
      "Best Browser BD social networking  :  10+\n",
      "Traffic signs BD  :  500+\n",
      "BF Browser by Betfilter - Stop Gambling Today!  :  10,000+\n",
      "My BF App  :  50,000+\n",
      "BH Mail  :  1,000+\n",
      "Zalo – Video Call  :  50,000,000+\n",
      "BJ - Confidential  :  10+\n",
      "BK Chat  :  1,000+\n",
      "Of the wall Arapaho bk  :  5+\n",
      "AC-BL  :  50+\n",
      "BBM - Free Calls & Messages  :  100,000,000+\n",
      "DMR BrandMeister Tool  :  10,000+\n",
      "BBMoji - Your personalized BBM Stickers  :  1,000,000+\n",
      "BN MALLORCA Radio  :  1,000+\n",
      "BQ Partners  :  1,000+\n",
      "BS-Mobile  :  50+\n",
      "ATC Unico BS  :  500+\n",
      "BT One Voice mobile access  :  5,000+\n",
      "BT Messenger  :  50,000+\n",
      "BT One Phone Mobile App  :  10,000+\n",
      "SW-100.tch by Callstel  :  1,000,000+\n",
      "BT MeetMe with Dolby Voice  :  100,000+\n",
      "Bluetooth Auto Connect  :  5,000,000+\n",
      "AudioBT: BT audio GPS/SMS/Text  :  50,000+\n",
      "BV  :  100+\n",
      "Feel Performer  :  10,000+\n",
      "Tiny Call Confirm  :  1,000,000+\n",
      "CB Radio Chat - for friends!  :  1,000,000+\n",
      "CB On Mobile  :  100,000+\n",
      "Virtual Walkie Talkie  :  1,000,000+\n",
      "Channel 19  :  100,000+\n",
      "Cb browser  :  50+\n",
      "CF Chat: Connecting Friends  :  100+\n",
      "retteMi.ch  :  5,000+\n",
      "Chrome Dev  :  5,000,000+\n",
      "CJ Browser - Fast & Private  :  100+\n",
      "CJ DVD Rentals  :  100+\n",
      "CK Call NEW  :  10+\n",
      "CM Transfer - Share any files with friends nearby  :  5,000,000+\n",
      "mail.co.uk Mail  :  5,000+\n",
      "ClanPlay: Community and Tools for Gamers  :  1,000,000+\n",
      "CQ-Mobile  :  1,000+\n",
      "CQ-Alert  :  500+\n",
      "QRZ Assistant  :  100,000+\n",
      "Pocket Prefix Plus  :  10,000+\n",
      "Ham Radio Prefixes  :  10,000+\n",
      "CS Customizer  :  1,000+\n",
      "CS Browser | #1 & BEST BROWSER  :  1,000+\n",
      "CS Browser Beta  :  5,000+\n",
      "My Vodafone (GR)  :  1,000,000+\n",
      "IZ2UUF Morse Koch CW  :  50,000+\n",
      "C W Browser  :  100+\n",
      "CW Bluetooth SPP  :  100+\n",
      "CW BLE Peripheral Simulator  :  500+\n",
      "Morse Code Reader  :  100,000+\n",
      "Learn Morse Code - G0HYN Learn Morse  :  5,000+\n",
      "Ring  :  10,000+\n",
      "Hyundai CX Conference  :  50+\n",
      "Cy Messenger  :  100+\n",
      "Amadeus GR & CY  :  100+\n",
      "Hlášenírozhlasu.cz  :  10+\n",
      "SMS Sender - sluzba.cz  :  1,000+\n",
      "WEB.DE Mail  :  10,000,000+\n",
      "Your Freedom VPN Client  :  5,000,000+\n",
      "CallApp: Caller ID, Blocker & Phone Call Recorder  :  10,000,000+\n",
      "Rádio Sol Nascente DF  :  500+\n",
      "DG Card  :  100+\n",
      "Whoscall - Caller ID & Block  :  10,000,000+\n",
      "DK Browser  :  10+\n",
      "cluster.dk  :  1,000+\n",
      "DK TEL Dialer  :  50+\n",
      "DM for WhatsApp  :  5,000+\n",
      "DM Talk New  :  5,000+\n",
      "DM - The Offical Messaging App  :  10+\n",
      "DM Tracker  :  1,000+\n",
      "Call Blocker & Blacklist  :  1,000+\n",
      "ReadyOp DT  :  1,000+\n",
      "DU Browser—Browse fast & fun  :  10,000,000+\n",
      "Caller ID & Call Block - DU Caller  :  5,000,000+\n",
      "BlueDV AMBE  :  1,000+\n",
      "DW Contacts & Phone & Dialer  :  1,000,000+\n",
      "Deaf World DW  :  10,000+\n",
      "Ham DX Cluster & Spots Finder  :  5,000+\n",
      "Mircules DX Cluster Lite  :  5,000+\n",
      "3G DZ Configuration  :  50,000+\n",
      "chat dz  :  100+\n",
      "love sms good morning  :  5,000+\n",
      "Goodbox - Mega App  :  100,000+\n",
      "Call Blocker - Blacklist, SMS Blocker  :  1,000,000+\n",
      "[EF]ShoutBox  :  100+\n",
      "Eg Call  :  10,000+\n",
      "ei  :  10+\n",
      "EJ messenger  :  10+\n",
      "Ek IRA  :  10+\n",
      "Orfox: Tor Browser for Android  :  10,000,000+\n",
      "EO Mumbai  :  10+\n",
      "EP RSS Reader  :  100+\n",
      "Voxer Walkie Talkie Messenger  :  10,000,000+\n",
      "ES-1  :  500+\n",
      "Hangouts Dialer - Call Phones  :  10,000,000+\n",
      "EU Council  :  1,000+\n",
      "Council Voting Calculator  :  5,000+\n",
      "Have your say on Europe  :  500+\n",
      "Programi podrške EU  :  100+\n",
      "Inbox.eu  :  10,000+\n",
      "Web Browser for Android  :  1,000,000+\n",
      "Everbridge  :  100,000+\n",
      "Best Auto Call Recorder Free  :  500+\n",
      "EZ Wifi Notification  :  10,000+\n",
      "Test Server SMS FA  :  5+\n",
      "Lite for Facebook Messenger  :  1,000,000+\n",
      "FC Browser - Focus Privacy Browser  :  1,000+\n",
      "EHiN-FH conferenceapp  :  100+\n",
      "Carpooling FH Hagenberg  :  100+\n",
      "Wi-Fi Auto-connect  :  1,000,000+\n",
      "Talkie - Wi-Fi Calling, Chats, File Sharing  :  500,000+\n",
      "WeFi - Free Fast WiFi Connect & Find Wi-Fi Map  :  1,000,000+\n",
      "Sat-Fi  :  5,000+\n",
      "Portable Wi-Fi hotspot Free  :  100,000+\n",
      "TownWiFi | Wi-Fi Everywhere  :  500,000+\n",
      "Jazz Wi-Fi  :  10,000+\n",
      "Sat-Fi Voice  :  1,000+\n",
      "Free Wi-fi HotspoT  :  50,000+\n",
      "FN Web Radio  :  10+\n",
      "FNH Payment Info  :  10+\n",
      "MARKET FO  :  100+\n",
      "FO OP St-Nazaire  :  100+\n",
      "FO SODEXO  :  100+\n",
      "FO RCBT  :  100+\n",
      "FO Interim  :  100+\n",
      "FO PSA Sept-Fons  :  100+\n",
      "FO AIRBUS TLSE  :  1,000+\n",
      "FO STELIA Méaulte  :  100+\n",
      "FO AIRBUS Nantes  :  100+\n",
      "Firefox Focus: The privacy browser  :  1,000,000+\n",
      "FP Connect  :  100+\n",
      "FreedomPop Messaging Phone/SIM  :  500,000+\n",
      "FP Live  :  10+\n",
      "HipChat - beta version  :  50,000+\n"
     ]
    }
   ],
   "source": [
    "for app in free_android:\n",
    "    if app[1] == 'COMMUNICATION':\n",
    "        print(app[0], ' : ', app[5])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we removed all the communication apps that have over 100 million installs, the average would be reduced roughly ten times:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Conclusion\n",
    "\n",
    "In this project we learned many different things about data science, we learned how to clean, analyze, and remove data as needed and how to identify good versus bad data. We analyzed two different data sets in order to get one singular result, we looked over the app store and the google play store. After looking over the data for the App store we see `Social Networking` as the most reviewed app, and in the google play store we see `Communication` as the most downloaded apps. In both cases categorys / genres of entertainment are close seconds.\n",
    "\n",
    "#### Suggested app profile\n",
    "Based off of this data I would suggest some sort of content service similar to youtube but the ability to connect and communicate with one another such as twit"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
